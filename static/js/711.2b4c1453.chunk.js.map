{"version":3,"file":"static/js/711.2b4c1453.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/MyNumbers/Form/form.module.css?a258","components/MyNumbers/Form/Form.jsx","webpack://goit-react-hw-08-phonebook/./src/components/MyNumbers/ContactList/ContactItem/contactItem.module.css?0129","components/MyNumbers/ContactList/ContactItem/ContactItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/MyNumbers/ContactList/contactList.module.css?0de1","components/MyNumbers/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/MyNumbers/Filter/filter.module.css?c3dc","components/MyNumbers/Filter/Filter.jsx","redux/contacts/selector.js","webpack://goit-react-hw-08-phonebook/./src/components/MyNumbers/myNumbers.module.css?36b8","components/MyNumbers/MyNumbers.jsx","pages/ContactsPage/ContactsPage.jsx","webpack://goit-react-hw-08-phonebook/./src/shared/shared-components/section/section.module.css?bb19","shared/shared-components/section/Section.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"form_form__8HMbI\",\"input\":\"form_input__YqRKK\",\"btn\":\"form_btn__qqDOA\",\"label\":\"form_label__hvBm1\"};","import { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport styles from './form.module.css';\n\nconst Form = ({ onSubmit }) => {\n  const [state, setState] = useState({\n    name: '',\n    number: '',\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(state);\n    setState({ name: '', number: '' });\n  };\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const { name, number } = state;\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.label} htmlFor=\"name\">\n        Name\n      </label>\n      <input\n        value={name}\n        type=\"text\"\n        name=\"name\"\n        id=\"name\"\n        placeholder=\"Enter Name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleChange}\n        className={styles.input}\n      />\n      <br />\n      <label className={styles.label} htmlFor=\"tel\">\n        Number\n      </label>\n      <input\n        value={number}\n        type=\"tel\"\n        name=\"number\"\n        id=\"tel\"\n        placeholder=\"Enter Number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleChange}\n        className={styles.input}\n      />\n      <br />\n      <button className={styles.btn} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n};\n\nexport default Form;\n\nForm.defaultProps = {\n  onSubmit: function () {},\n};\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"contactItem_item__fFB7E\",\"btn\":\"contactItem_btn__Ycsdp\"};","import PropTypes from 'prop-types';\n\nimport styles from './contactItem.module.css';\n\nconst ContactItem = ({ options, deleteNumber }) => {\n  const [name, number, id] = options;\n\n  return (\n    <li className={styles.item}>\n      {name}: {number}\n      <button\n        type=\"button\"\n        className={styles.btn}\n        onClick={() => deleteNumber(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  deleteNumber: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contactList_list__i384l\"};","import PropTypes from 'prop-types';\n\nimport ContactItem from './ContactItem';\n\nimport styles from './contactList.module.css';\n\nconst ContactList = ({ contacts, deleteNumber }) => {\n  const elements = contacts.map(({ id, name, number }) => (\n    <ContactItem\n      key={id}\n      options={[name, number, id]}\n      deleteNumber={deleteNumber}\n    />\n  ));\n\n  return <ul className={styles.list}>{elements}</ul>;\n};\n\nexport default ContactList;\n\nContactList.defaultProps = {\n  contacts: [],\n};\n\nContactList.propTypes = {\n  deleteNumber: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"filter_filter__wTVQD\",\"filterInput\":\"filter_filterInput__tqGr6\"};","import PropTypes from 'prop-types';\n\nimport styles from './filter.module.css';\n\nconst Filter=({ onChange, filter })=> {\n  return (\n    <>\n      <label className={styles.filter} htmlFor=\"filter\">\n        {' '}\n        Find by Name\n      </label>\n      <input\n        type=\"text\"\n        value={filter}\n        name=\"filter\"\n        id=\"filter\"\n        placeholder=\"Find Contact by Name\"\n        className={styles.filterInput}\n        onChange={onChange}\n        \n      />\n    </>\n  );\n}\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default Filter;","export const getContacts = store => store.contacts.items;\nexport const getLoading = store => store.contacts.loading;\nexport const getError = store => store.contacts.error;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"myNumbers_container__GX25n\"};","import { useState, useCallback, useEffect } from 'react';\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\n\nimport Form from './Form';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter';\nimport Loader from 'shared/shared-components/loader/Loader';\n\nimport { getContacts, getLoading, getError } from 'redux/contacts/selector';\nimport {\n  getUserContacts,\n  addContact,\n  removeContact,\n} from 'redux/contacts/operations';\n\nimport styles from './myNumbers.module.css';\n\nconst MyNumbers = () => {\n  const contacts = useSelector(getContacts, shallowEqual);\n\n  const isLoading = useSelector(getLoading, shallowEqual);\n\n  const error = useSelector(getError, shallowEqual);\n\n  const dispatch = useDispatch();\n\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    dispatch(getUserContacts());\n  }, [dispatch]);\n\n  const addContacts = useCallback(\n    data => dispatch(addContact(data)),\n    [dispatch]\n  );\n\n  const deleteNumber = useCallback(\n    id => dispatch(removeContact(id)),\n    [dispatch]\n  );\n\n  const changeFilter = useCallback(e => setFilter(e.target.value), [setFilter]);\n\n  const getFilteredContacts = () => {\n    if (!filter) {\n      return contacts;\n    }\n    const filterRequest = filter.toLowerCase();\n    const filteredContacts = contacts.filter(({ name }) => {\n      const res = name.toLowerCase().includes(filterRequest);\n      return res;\n    });\n\n    return filteredContacts;\n  };\n\n  return (\n    <div className={styles.container}>\n      <Form onSubmit={addContacts} />\n\n      <h2 className={styles.title}>Contacts</h2>\n\n      <Filter onChange={changeFilter} filter={filter} />\n\n      {error && <div className={styles.error}>{error}</div>}\n\n      {isLoading && <Loader />}\n\n      <ContactList\n        contacts={getFilteredContacts()}\n        deleteNumber={deleteNumber}\n      />\n    </div>\n  );\n};\n\nexport default MyNumbers;\n","import Section from 'shared/shared-components/section';\nimport MyNumbers from 'components/MyNumbers/MyNumbers';\n\nconst ContactsPage = () => {\n  return (\n    <Section title=\"PhoneBook\">\n      <MyNumbers />\n    </Section>\n  );\n};\n\nexport default ContactsPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"section_section__CRLm3\",\"title\":\"section_title__9rYps\"};","import PropTypes from 'prop-types';\n\nimport styles from './section.module.css';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div className={styles.section}>\n      <h2 className={styles.title}>{title}</h2>\n      {children}\n    </div>\n  );\n};\n\nSection.defaultProps = {\n  title: '',\n};\nSection.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Section;\n"],"names":["Form","onSubmit","useState","name","number","state","setState","handleChange","target","value","className","styles","e","preventDefault","htmlFor","type","id","placeholder","pattern","title","required","onChange","defaultProps","options","deleteNumber","onClick","ContactList","contacts","elements","map","filter","getContacts","store","items","getLoading","loading","getError","error","useSelector","shallowEqual","isLoading","dispatch","useDispatch","setFilter","useEffect","getUserContacts","addContacts","useCallback","data","addContact","removeContact","changeFilter","Loader","filterRequest","toLowerCase","includes","getFilteredContacts","Section","children"],"sourceRoot":""}